SET(PACKAGE libcue)
SET(PACKAGE_NAME libcue)
SET(PACKAGE_VERSION 2.0.0)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)

PROJECT(libcue)

SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
ADD_DEFINITIONS(-DPACKAGE_VERSION="${PACKAGE_VERSION}")
ADD_DEFINITIONS(-DPACKAGE_STRING="${PACKAGE_STRING}")

SET (CUE_SOURCES
	cd.c
	cdtext.c
	rem.c
	time.c)

CONFIGURE_FILE(libcue.pc.in libcue.pc @ONLY)
INSTALL(FILES ${CMAKE_BINARY_DIR}/libcue.pc
	DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}) # for generated files

FIND_PACKAGE(BISON)
FIND_PACKAGE(FLEX)
BISON_TARGET(CueParser
	cue_parser.y
	${CMAKE_BINARY_DIR}/cue_parser.c)
FLEX_TARGET(CueScanner
	cue_scanner.l
	${CMAKE_BINARY_DIR}/cue_scanner.c)
ADD_FLEX_BISON_DEPENDENCY(CueScanner CueParser)

ADD_LIBRARY(cue SHARED ${CUE_SOURCES}
	${BISON_CueParser_OUTPUTS}
	${FLEX_CueScanner_OUTPUTS})

SET_TARGET_PROPERTIES (cue
	PROPERTIES VERSION ${PACKAGE_VERSION})

INSTALL(TARGETS cue
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib)
INSTALL(DIRECTORY ${CMAKE_SOURCE_DIR}/ DESTINATION include/libcue
	FILES_MATCHING PATTERN "*.h")

SET(CPACK_PACKAGE_VERSION "${PACKAGE_VERSION}")
SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${PACKAGE_NAME}-${PACKAGE_VERSION}")
SET(CPACK_SOURCE_GENERATOR "TXZ")
SET(CPACK_SOURCE_IGNORE_FILES ".*~;\\\\.swp$;/\\\\.git/;build/;t/")
INCLUDE(CPack)
